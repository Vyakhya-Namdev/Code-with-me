
import java.util.*;
class Main {
    public static void findMaxLength(char[] arr, int k){
        HashMap<Character, Integer> map = new HashMap<>();
        int maxSize = Integer.MIN_VALUE;
        for(int i=0; i<k; i++){
            map.put(arr[i], map.getOrDefault(arr[i], 0)+1);
        }
        maxSize = Math.max(maxSize, map.size());
        
        int j=k;
        while(j < arr.length){
            //Remove old element
            map.put(arr[j-k], map.get(arr[j-k]) - 1);
            if (map.get(arr[j-k]) == 0) {
                map.remove(arr[j-k]);
            }
            //Add new element
            map.put(arr[j], map.getOrDefault(arr[j], 0)+1);
            j++;
            maxSize = Math.max(maxSize, map.size());
            if(maxSize == k) break;
        }
        
        if(maxSize == k){
            for(Character key: map.keySet()){
                System.out.println(key + " ");
            }
        }else{
            System.out.println("No subarray exists of size k with unique chars");
        }
    }
    public static void main(String[] args) {
        char[] arr = {'a', 'b', 'a', 'b', 'c', 'a', 'c', 'b', 'd', 'b'};
        int k = 4;
        findMaxLength(arr, k);
    }
}
